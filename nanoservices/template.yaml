AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Receipt Manager API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300
    MemorySize: 128
    Architectures:
      - x86_64
    Runtime: go1.x
    Environment:
      Variables:
        Environment: !Ref Environment
        Origin: !Ref Origin

Parameters:
  Environment:
    Type: String
    Description: Environment 
    Default: dev
  DbHost:
    Type: String
    Description: DB Host
    Default: empty
  DbPort:
    Type: String
    Description: DB Port
    Default: empty
  DbName:
    Type: String
    Description: DB Name
    Default: empty
  DbUser:
    Type: String
    Description: DB User
    Default: empty
  DbPassword:
    Type: String
    Description: DB Password
    Default: empty
    NoEcho: true
  ApiSecret:
    Type: String
    Description: Api Secret
    Default: empty
  AccessTokenPublicKey:
    Type: String
    Description: Access Token Public Key
    Default: empty
  AccessTokenPrivateKey:
    Type: String
    Description: Access Token Private Key
    Default: empty
  AccessTokenMaxAge:
    Type: String
    Description: Access Token Max Age
    Default: 21600
  AccessTokenExpiresIn:
    Type: String
    Description: Access Token Expires In
    Default: 360h
  RefreshTokenPublicKey:
    Type: String
    Description: Refresh Token Public Key
    Default: empty
  RefreshTokenPrivateKey:
    Type: String
    Description: Refresh Token Private Key
    Default: empty
  RefreshTokenMaxAge:
    Type: String
    Description: Refresh Token Max Age
    Default: 21600
  RefreshTokenExpiresIn:
    Type: String
    Description: Refresh Token Expires In
    Default: 360h
  OpenAiApiKey:
    Type: String
    Description: Open AI API Key
    Default: empty
  Origin:
    Type: String
    Description: Allowed Origins
    Default: empty

Resources:
  # ApiGateway
  ReceiptManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: ReceiptManagerApiTest
      Cors:
        AllowMethods: "'GET, POST, PUT, DELETE, OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        MaxAge: 600

  # SQS
  PendingReceiptsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: pending_receipts
      VisibilityTimeout: 60

  ReceiptItemsCategorizeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: receipt_items_categorize
      VisibilityTimeout: 60

  # Lambdas
  # Auth
  AuthRegister:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "AuthRegister"
      CodeUri: ./cmd/aws/auth/register
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /auth/register
            Method: POST
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn

  AuthLogin:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "AuthLogin"
      CodeUri: ./cmd/aws/auth/login
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /auth/login
            Method: POST
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn

  AuthLogout:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AuthLogout
      CodeUri: ./cmd/aws/auth/logout
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /auth/logout
            Method: POST
  
  AuthMe:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AuthMe
      CodeUri: ./cmd/aws/auth/me
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /auth/me
            Method: GET
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword

  # Stores
  StoresIndex:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: StoresIndex
      CodeUri: ./cmd/aws/stores/index
      Handler: main
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /stores
            Method: GET
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn

  StoresReceipts:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: StoresReceipts
      CodeUri: ./cmd/aws/stores/receipts
      Handler: main
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /stores/{id}/receipts
            Method: GET
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn

  # ReceiptItems
  ReceiptItemsUpdateCategory:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptItemsUpdateCategory
      CodeUri: ./cmd/aws/receipt-items/update-category
      Handler: main
      Events:
        Patch:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipt-items/{id}
            Method: PATCH
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn
          
  # Receipts
  ReceiptsParse:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsParse
      CodeUri: ./cmd/aws/receipts/parse
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts/parse
            Method: POST

  ReceiptsIndex:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsIndex
      CodeUri: ./cmd/aws/receipts/index
      Handler: main
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts
            Method: GET
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn

  ReceiptsShow:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsShow
      CodeUri: ./cmd/aws/receipts/show
      Handler: main
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts/{id}
            Method: GET
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn

  ReceiptsCreateFromUrl:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsCreateFromUrl
      CodeUri: ./cmd/aws/receipts/create-from-url
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts
            Method: POST
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn

  ReceiptsDelete:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsDelete
      CodeUri: ./cmd/aws/receipts/delete
      Handler: main
      Events:
        Delete:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts/{id}
            Method: DELETE
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          ApiSecret: !Ref ApiSecret
          AccessTokenPublicKey: !Ref AccessTokenPublicKey
          AccessTokenPrivateKey: !Ref AccessTokenPrivateKey
          AccessTokenMaxAge: !Ref AccessTokenMaxAge
          AccessTokenExpiresIn: !Ref AccessTokenExpiresIn
          RefreshTokenPublicKey: !Ref RefreshTokenPublicKey
          RefreshTokenPrivateKey: !Ref RefreshTokenPrivateKey
          RefreshTokenMaxAge: !Ref RefreshTokenMaxAge
          RefreshTokenExpiresIn: !Ref RefreshTokenExpiresIn

  WorkerPendingReceipts:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WorkerPendingReceipts
      CodeUri: ./cmd/aws/receipts/worker-pending-receipts
      Handler: main
      Events:
        QueueWrite:
          Type: SQS
          Properties:
            Queue: !GetAtt PendingReceiptsQueue.Arn
            BatchSize: 5
      Timeout: 60
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword

  WorkerCategorizeReceiptItems:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WorkerCategorizeReceiptItems
      CodeUri: ./cmd/aws/receipts/worker-categorize-receipt-items
      Handler: main
      Events:
        QueueWrite:
          Type: SQS
          Properties:
            Queue: !GetAtt ReceiptItemsCategorizeQueue.Arn
            BatchSize: 5
      Timeout: 60
      Environment:
        Variables:
          DbHost: !Ref DbHost
          DbPort: !Ref DbPort
          DbName: !Ref DbName
          DbUser: !Ref DbUser
          DbPassword: !Ref DbPassword
          OpenAiApiKey: !Ref OpenAiApiKey

# Output example:
# HelloWorldFunction:
#   Description: "First Lambda Function ARN"
#   Value: !GetAtt HelloWorldFunction.Arn
# HelloWorldFunctionIamRole:
#   Description: "Implicit IAM Role created for Hello World function"
#   Value: !GetAtt HelloWorldFunctionRole.Arn

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # Api Gateway
  # ReceiptManagerApi:
  #   Description: "API Gateway endpoint URL for Prod environment for First Function"
  #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/receipt-manager/"
  # SQS
  PendingReceiptsQueue:
    Description: test
    Value: !GetAtt PendingReceiptsQueue.Arn
  ReceiptItemsCategorizeQueue:
    Description: test
    Value: !GetAtt ReceiptItemsCategorizeQueue.Arn
  # Auth
  AuthRegister:
    Description: test
    Value: !GetAtt AuthRegister.Arn
  AuthLogin:
    Description: test
    Value: !GetAtt AuthLogin.Arn
  AuthLogout:
    Description: test
    Value: !GetAtt AuthLogout.Arn
  # Stores
  StoresIndex:
    Description: test
    Value: !GetAtt StoresIndex.Arn
  StoresReceipts:
    Description: test
    Value: !GetAtt StoresReceipts.Arn
  # Receipt Items
  ReceiptItemsUpdateCategory:
    Description: test
    Value: !GetAtt ReceiptItemsUpdateCategory.Arn
  ReceiptsParse:
    Description: test
    Value: !GetAtt ReceiptsParse.Arn
  ReceiptsIndex:
    Description: test
    Value: !GetAtt ReceiptsIndex.Arn
  ReceiptsShow:
    Description: test
    Value: !GetAtt ReceiptsShow.Arn
  ReceiptsCreateFromUrl:
    Description: test
    Value: !GetAtt ReceiptsCreateFromUrl.Arn
  ReceiptsDelete:
    Description: test
    Value: !GetAtt ReceiptsDelete.Arn
  WorkerPendingReceipts:
    Description: test
    Value: !GetAtt WorkerPendingReceipts.Arn
  WorkerCategorizeReceiptItems:
    Description: test
    Value: !GetAtt WorkerCategorizeReceiptItems.Arn