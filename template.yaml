AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Receipt Manager API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300
    MemorySize: 128
    Architectures:
      - x86_64
    Runtime: go1.x
    Environment:
      Variables:
        ENVIRONMENT: dev

Parameters:
  ENVIRONMENT:
    Type: String
    Description: Environment 
    Default: dev
  DB_HOST:
    Type: String
    Description: DB Host
    Default:
  DB_PORT:
    Type: String
    Description: DB Port
    Default:
  DB_NAME:
    Type: String
    Description: DB Name
    Default:
  DB_USER:
    Type: String
    Description: DB User
    Default:
  DB_PASSWORD:
    Type: String
    Description: DB Password
    Default:
  API_SECRET:
    Type: String
    Description: Api Secret
    Default: 
  ACCESS_TOKEN_PUBLIC_KEY:
    Type: String
    Description: Access Token Public Key
    Default:
  ACCESS_TOKEN_PRIVATE_KEY:
    Type: String
    Description: Access Token Private Key
    Default:
  ACCESS_TOKEN_MAX_AGE:
    Type: String
    Description: Access Token Max Age
    Default: 21600
  ACCESS_TOKEN_EXPIRES_IN:
    Type: String
    Description: Access Token Expires In
    Default: 360h
  REFRESH_TOKEN_PUBLIC_KEY:
    Type: String
    Description: Refresh Token Public Key
    Default:
  REFRESH_TOKEN_PRIVATE_KEY:
    Type: String
    Description: Refresh Token Private Key
    Default:
  REFRESH_TOKEN_MAX_AGE:
    Type: String
    Description: Refresh Token Max Age
    Default: 21600
  REFRESH_TOKEN_EXPIRES_IN:
    Type: String
    Description: Refresh Token Expires In
    Default: 360h
  OPEN_AI_API_KEY:
    Type: String
    Description: Open AI API Key
    Default:

Resources:
  # ApiGateway
  ReceiptManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: ReceiptManagerApi.Test

  # SQS
  PendingReceiptsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: pending_receipts

  ReceiptItemsCategorizeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: receipt_items_categorize

  # Lambdas
  # Auth
  AuthRegister:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "AuthRegister"
      CodeUri: ./cmd/aws/auth/register
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /auth/register
            Method: POST
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD

  AuthLogin:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "AuthLogin"
      CodeUri: ./cmd/aws/auth/login
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /auth/login
            Method: POST
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD
          API_SECRET: !Ref API_SECRET
          ACCESS_TOKEN_PUBLIC_KEY: !Ref ACCESS_TOKEN_PUBLIC_KEY
          ACCESS_TOKEN_PRIVATE_KEY: !Ref ACCESS_TOKEN_PRIVATE_KEY
          ACCESS_TOKEN_MAX_AGE: !Ref ACCESS_TOKEN_MAX_AGE
          ACCESS_TOKEN_EXPIRES_IN: !Ref ACCESS_TOKEN_EXPIRES_IN
          REFRESH_TOKEN_PUBLIC_KEY: !Ref REFRESH_TOKEN_PUBLIC_KEY
          REFRESH_TOKEN_PRIVATE_KEY: !Ref REFRESH_TOKEN_PRIVATE_KEY
          REFRESH_TOKEN_MAX_AGE: !Ref REFRESH_TOKEN_MAX_AGE
          REFRESH_TOKEN_EXPIRES_IN: !Ref REFRESH_TOKEN_EXPIRES_IN

  AuthLogout:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AuthLogout
      CodeUri: ./cmd/aws/auth/logout
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /auth/logout
            Method: POST

  # Stores
  StoresIndex:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: StoresIndex
      CodeUri: ./cmd/aws/stores/index
      Handler: main
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /stores
            Method: GET
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD
          API_SECRET: !Ref API_SECRET
          ACCESS_TOKEN_PUBLIC_KEY: !Ref ACCESS_TOKEN_PUBLIC_KEY
          ACCESS_TOKEN_PRIVATE_KEY: !Ref ACCESS_TOKEN_PRIVATE_KEY
          ACCESS_TOKEN_MAX_AGE: !Ref ACCESS_TOKEN_MAX_AGE
          ACCESS_TOKEN_EXPIRES_IN: !Ref ACCESS_TOKEN_EXPIRES_IN
          REFRESH_TOKEN_PUBLIC_KEY: !Ref REFRESH_TOKEN_PUBLIC_KEY
          REFRESH_TOKEN_PRIVATE_KEY: !Ref REFRESH_TOKEN_PRIVATE_KEY
          REFRESH_TOKEN_MAX_AGE: !Ref REFRESH_TOKEN_MAX_AGE
          REFRESH_TOKEN_EXPIRES_IN: !Ref REFRESH_TOKEN_EXPIRES_IN

  StoresReceipts:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: StoresReceipts
      CodeUri: ./cmd/aws/stores/receipts
      Handler: main
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /stores/{id}/receipts
            Method: GET
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD
          API_SECRET: !Ref API_SECRET
          ACCESS_TOKEN_PUBLIC_KEY: !Ref ACCESS_TOKEN_PUBLIC_KEY
          ACCESS_TOKEN_PRIVATE_KEY: !Ref ACCESS_TOKEN_PRIVATE_KEY
          ACCESS_TOKEN_MAX_AGE: !Ref ACCESS_TOKEN_MAX_AGE
          ACCESS_TOKEN_EXPIRES_IN: !Ref ACCESS_TOKEN_EXPIRES_IN
          REFRESH_TOKEN_PUBLIC_KEY: !Ref REFRESH_TOKEN_PUBLIC_KEY
          REFRESH_TOKEN_PRIVATE_KEY: !Ref REFRESH_TOKEN_PRIVATE_KEY
          REFRESH_TOKEN_MAX_AGE: !Ref REFRESH_TOKEN_MAX_AGE
          REFRESH_TOKEN_EXPIRES_IN: !Ref REFRESH_TOKEN_EXPIRES_IN

  # ReceiptItems
  ReceiptItemsUpdateCategory:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptItemsUpdateCategory
      CodeUri: ./cmd/aws/receipt-items/update-category
      Handler: main
      Events:
        Patch:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipt-items/{id}
            Method: PATCH
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD
          API_SECRET: !Ref API_SECRET
          ACCESS_TOKEN_PUBLIC_KEY: !Ref ACCESS_TOKEN_PUBLIC_KEY
          ACCESS_TOKEN_PRIVATE_KEY: !Ref ACCESS_TOKEN_PRIVATE_KEY
          ACCESS_TOKEN_MAX_AGE: !Ref ACCESS_TOKEN_MAX_AGE
          ACCESS_TOKEN_EXPIRES_IN: !Ref ACCESS_TOKEN_EXPIRES_IN
          REFRESH_TOKEN_PUBLIC_KEY: !Ref REFRESH_TOKEN_PUBLIC_KEY
          REFRESH_TOKEN_PRIVATE_KEY: !Ref REFRESH_TOKEN_PRIVATE_KEY
          REFRESH_TOKEN_MAX_AGE: !Ref REFRESH_TOKEN_MAX_AGE
          REFRESH_TOKEN_EXPIRES_IN: !Ref REFRESH_TOKEN_EXPIRES_IN
          
  # Receipts
  ReceiptsParse:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsParse
      CodeUri: ./cmd/aws/receipts/parse
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts/parse
            Method: POST

  ReceiptsIndex:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsIndex
      CodeUri: ./cmd/aws/receipts/index
      Handler: main
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts
            Method: GET
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD
          API_SECRET: !Ref API_SECRET
          ACCESS_TOKEN_PUBLIC_KEY: !Ref ACCESS_TOKEN_PUBLIC_KEY
          ACCESS_TOKEN_PRIVATE_KEY: !Ref ACCESS_TOKEN_PRIVATE_KEY
          ACCESS_TOKEN_MAX_AGE: !Ref ACCESS_TOKEN_MAX_AGE
          ACCESS_TOKEN_EXPIRES_IN: !Ref ACCESS_TOKEN_EXPIRES_IN
          REFRESH_TOKEN_PUBLIC_KEY: !Ref REFRESH_TOKEN_PUBLIC_KEY
          REFRESH_TOKEN_PRIVATE_KEY: !Ref REFRESH_TOKEN_PRIVATE_KEY
          REFRESH_TOKEN_MAX_AGE: !Ref REFRESH_TOKEN_MAX_AGE
          REFRESH_TOKEN_EXPIRES_IN: !Ref REFRESH_TOKEN_EXPIRES_IN

  ReceiptsShow:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsShow
      CodeUri: ./cmd/aws/receipts/show
      Handler: main
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts/{id}
            Method: GET
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD
          API_SECRET: !Ref API_SECRET
          ACCESS_TOKEN_PUBLIC_KEY: !Ref ACCESS_TOKEN_PUBLIC_KEY
          ACCESS_TOKEN_PRIVATE_KEY: !Ref ACCESS_TOKEN_PRIVATE_KEY
          ACCESS_TOKEN_MAX_AGE: !Ref ACCESS_TOKEN_MAX_AGE
          ACCESS_TOKEN_EXPIRES_IN: !Ref ACCESS_TOKEN_EXPIRES_IN
          REFRESH_TOKEN_PUBLIC_KEY: !Ref REFRESH_TOKEN_PUBLIC_KEY
          REFRESH_TOKEN_PRIVATE_KEY: !Ref REFRESH_TOKEN_PRIVATE_KEY
          REFRESH_TOKEN_MAX_AGE: !Ref REFRESH_TOKEN_MAX_AGE
          REFRESH_TOKEN_EXPIRES_IN: !Ref REFRESH_TOKEN_EXPIRES_IN

  ReceiptsCreateFromUrl:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsCreateFromUrl
      CodeUri: ./cmd/aws/receipts/create-from-url
      Handler: main
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts
            Method: POST
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD
          API_SECRET: !Ref API_SECRET
          ACCESS_TOKEN_PUBLIC_KEY: !Ref ACCESS_TOKEN_PUBLIC_KEY
          ACCESS_TOKEN_PRIVATE_KEY: !Ref ACCESS_TOKEN_PRIVATE_KEY
          ACCESS_TOKEN_MAX_AGE: !Ref ACCESS_TOKEN_MAX_AGE
          ACCESS_TOKEN_EXPIRES_IN: !Ref ACCESS_TOKEN_EXPIRES_IN
          REFRESH_TOKEN_PUBLIC_KEY: !Ref REFRESH_TOKEN_PUBLIC_KEY
          REFRESH_TOKEN_PRIVATE_KEY: !Ref REFRESH_TOKEN_PRIVATE_KEY
          REFRESH_TOKEN_MAX_AGE: !Ref REFRESH_TOKEN_MAX_AGE
          REFRESH_TOKEN_EXPIRES_IN: !Ref REFRESH_TOKEN_EXPIRES_IN

  ReceiptsDelete:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ReceiptsDelete
      CodeUri: ./cmd/aws/receipts/delete
      Handler: main
      Events:
        Delete:
          Type: Api
          Properties:
            RestApiId: !Ref ReceiptManagerApi
            Path: /receipts/{id}
            Method: DELETE
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD
          API_SECRET: !Ref API_SECRET
          ACCESS_TOKEN_PUBLIC_KEY: !Ref ACCESS_TOKEN_PUBLIC_KEY
          ACCESS_TOKEN_PRIVATE_KEY: !Ref ACCESS_TOKEN_PRIVATE_KEY
          ACCESS_TOKEN_MAX_AGE: !Ref ACCESS_TOKEN_MAX_AGE
          ACCESS_TOKEN_EXPIRES_IN: !Ref ACCESS_TOKEN_EXPIRES_IN
          REFRESH_TOKEN_PUBLIC_KEY: !Ref REFRESH_TOKEN_PUBLIC_KEY
          REFRESH_TOKEN_PRIVATE_KEY: !Ref REFRESH_TOKEN_PRIVATE_KEY
          REFRESH_TOKEN_MAX_AGE: !Ref REFRESH_TOKEN_MAX_AGE
          REFRESH_TOKEN_EXPIRES_IN: !Ref REFRESH_TOKEN_EXPIRES_IN
  
  # ReceiptItemsCategorize:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: ReceiptsItemsCategorize
  #     CodeUri: ./cmd/receipts/categorize
  #     Handler: main
  #     Events:
  #       Post:
  #         Type: Api
  #         Properties:
  #           RestApiId: !Ref ReceiptManagerApi
  #           Path: /receipt/categorize
  #           Method: POST
  #     Environment:
  #       Variables:
  #         DB_HOST: !Ref DB_HOST
  #         DB_PORT: !Ref DB_PORT
  #         DB_NAME: !Ref DB_NAME
  #         DB_USER: !Ref DB_USER
  #         DB_PASSWORD: !Ref DB_PASSWORD
  #         OPEN_AI_API_KEY: !Ref OPEN_AI_API_KEY

  WorkerPendingReceipts:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WorkerPendingReceipts
      CodeUri: ./cmd/aws/receipts/worker-pending-receipts
      Handler: main
      Events:
        PendingReceiptsQueueWrite:
          Type: SQS
          Properties:
            Queue: !GetAtt PendingReceiptsQueue.Arn
            BatchSize: 10
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD

  WorkerCategorizeReceiptItems:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WorkerCategorizeReceiptItems
      CodeUri: ./cmd/aws/receipts/worker-categorize-receipt-items
      Handler: main
      Events:
        ReceiptItemsCategorizeQueueWrite:
          Type: SQS
          Properties:
            Queue: !GetAtt ReceiptItemsCategorizeQueue.Arn
            BatchSize: 10
      Environment:
        Variables:
          DB_HOST: !Ref DB_HOST
          DB_PORT: !Ref DB_PORT
          DB_NAME: !Ref DB_NAME
          DB_USER: !Ref DB_USER
          DB_PASSWORD: !Ref DB_PASSWORD

# Outputs:
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   HelloWorldAPI:
#     Description: "API Gateway endpoint URL for Prod environment for First Function"
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#   HelloWorldFunction:
#     Description: "First Lambda Function ARN"
#     Value: !GetAtt HelloWorldFunction.Arn
#   HelloWorldFunctionIamRole:
#     Description: "Implicit IAM Role created for Hello World function"
#     Value: !GetAtt HelloWorldFunctionRole.Arn
